<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/03/08/fpt-xin-ban-jiao-cheng/"/>
      <url>/2023/03/08/fpt-xin-ban-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-FRP搭建教程半自动date-2023-02-01-18-25-30"><a href="#title-FRP搭建教程半自动date-2023-02-01-18-25-30" class="headerlink" title="title: FRP搭建教程半自动date: 2023-02-01 18:25:30"></a>title: FRP搭建教程半自动<br>date: 2023-02-01 18:25:30</h2><h1 id="自用脚本备份"><a href="#自用脚本备份" class="headerlink" title="自用脚本备份"></a>自用脚本备份</h1><p>1.来自<a href="https://github.com/stilleshan">stilleshan</a>大佬的FRP脚本<br>FRPS<br> Linux 服务器 一键脚本安装</p><blockquote><p><em>本脚本目前同时支持 Linux X86 和 ARM 架构</em></p></blockquote><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/jiaoben/frp/azfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrpc.sh <span class="token operator">&amp;&amp;</span> ./azfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/azfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrpc.sh <span class="token operator">&amp;&amp;</span> ./azfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /usr/local/frp/frpc.ini<span class="token comment"># 修改 frpc.ini 配置</span><span class="token function">sudo</span> systemctl restart frpc<span class="token comment"># 重启 frpc 服务即可生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>卸载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/jiaoben/frp/xzfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrpc.sh <span class="token operator">&amp;&amp;</span> ./xzfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/xzfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrpc.sh <span class="token operator">&amp;&amp;</span> ./xzfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>FRPS<br>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/frp/azfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrps.sh <span class="token operator">&amp;&amp;</span> ./azfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/azfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrps.sh <span class="token operator">&amp;&amp;</span> ./azfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /usr/local/frp/frps.ini<span class="token comment"># 修改 frps.ini 配置</span><span class="token function">sudo</span> systemctl restart frps<span class="token comment"># 重启 frps 服务即可生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>卸载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/frp/xzfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrps.sh <span class="token operator">&amp;&amp;</span> ./xzfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/xzfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrps.sh <span class="token operator">&amp;&amp;</span> ./xzfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="frps相关命令"><a href="#frps相关命令" class="headerlink" title="frps相关命令"></a>frps相关命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start frps<span class="token comment"># 启动服务 </span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> frps<span class="token comment"># 开机自启</span><span class="token function">sudo</span> systemctl status frps<span class="token comment"># 状态查询</span><span class="token function">sudo</span> systemctl restart frps<span class="token comment"># 重启服务</span><span class="token function">sudo</span> systemctl stop frps<span class="token comment"># 停止服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改frpc.ini和frps.ini的方法参考</p><pre class="line-numbers language-none"><code class="language-none">rm -rf /usr/local/frp/frpc.inicat &gt;/usr/local/frp/frpc.ini &lt;&lt;EOF[common]server_addr = frps地址server_port = frps端口log_file = /usr/local/frp/al.log ＃日志文件目录log_level = infolog_max_days = 3token = 密码login_fail_exit = false[web-ssh] #自定义，不能重复type = tcplocal_ip = 127.0.0.1local_port = 22remote_port = 22EOFsystemctl restart frpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如有不足可以留言哈</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓旧手机利用，linuxdeploy使用教程</title>
      <link href="/2023/03/08/linuxdeploy-shi-yong-jiao-cheng/"/>
      <url>/2023/03/08/linuxdeploy-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="安装linuxdeploy"><a href="#安装linuxdeploy" class="headerlink" title="安装linuxdeploy"></a>安装linuxdeploy</h1><p><a href="https://wj.puguying.cn/anzhuo/apk/linuxdeploy.apk">下载地址作者镜像</a><br><a href="https://github.com/meefik/linuxdeploy/releases/download/2.6.0/linuxdeploy-2.6.0-259.apk">官方github</a></p><h1 id="配置linuxdeploy"><a href="#配置linuxdeploy" class="headerlink" title="配置linuxdeploy"></a>配置linuxdeploy</h1><p>我选择的是debian，安装源使用的华为云</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">https://mirrors.huaweicloud.com/debian/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置linux"><a href="#配置linux" class="headerlink" title="配置linux"></a>配置linux</h1><p>修改ssh秘钥和端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> wj.puguying.cn/key.sh<span class="token punctuation">)</span> <span class="token parameter variable">-p</span> <span class="token number">22</span> <span class="token parameter variable">-g</span> xiayikechun <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注:-p为修改端口<br>   -g为github用户秘钥<br>   -d为关闭密码登录<br>安装ddns动态域名解析</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/ddns<span class="token function">wget</span> https://jb.puguying.cn/ddns/ddns <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ddns <span class="token operator">&amp;&amp;</span> ./ddns <span class="token parameter variable">-s</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装alist网盘目录使用官网脚本一键安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/alist<span class="token comment"># 安装</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> <span class="token function">install</span> /home/alist<span class="token comment"># 升级</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> update /home/alist<span class="token comment"># 卸载</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> uninstall /home/alist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装message-pusher消息推送</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/message<span class="token function">wget</span> wj.puguying.cn/message-pusher <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> u+x message-pusher<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装frp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/frp<span class="token function">wget</span> https://wj.puguying.cn/frpc <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x frpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置frpc.ini</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> frps <span class="token function">ip</span>server_port <span class="token operator">=</span> frps 端口log_file <span class="token operator">=</span> /home/frp/frpc.loglog_level <span class="token operator">=</span> infolog_max_days <span class="token operator">=</span> <span class="token number">3</span>token <span class="token operator">=</span> 密码login_fail_exit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">[</span>jg-http-al<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">5242</span>custom_domains <span class="token operator">=</span> al.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-hrrps-al<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httpslocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">5243</span>custom_domains <span class="token operator">=</span> al.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-http-ddns<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">9874</span>custom_domains <span class="token operator">=</span> ddns.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-hrrps-ddns<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httpslocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">9875</span>custom_domains <span class="token operator">=</span> ddns.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-http-ql<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">5701</span>custom_domains <span class="token operator">=</span> ql.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-hrrps-ql<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httpslocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">5702</span>custom_domains <span class="token operator">=</span> ql.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-http-sp<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">4002</span>custom_domains <span class="token operator">=</span> sp.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-https-sp<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httpslocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">4003</span>custom_domains <span class="token operator">=</span> sp.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-http-ts<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">3001</span>custom_domains <span class="token operator">=</span> ts.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>jg-https-ts<span class="token punctuation">]</span>privilege_mode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> httpslocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">3002</span>custom_domains <span class="token operator">=</span> ts.puguying.mluse_encryption <span class="token operator">=</span> <span class="token boolean">false</span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装supervisor</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> supervisor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置supervisor</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>inet_http_server<span class="token punctuation">]</span><span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0:4001  <span class="token punctuation">;</span>默认配置只能本地访问，配置成0.0.0.0可以通过外部查看监控界面<span class="token assign-left variable">username</span><span class="token operator">=</span>xname<span class="token assign-left variable">password</span><span class="token operator">=</span>mima<span class="token punctuation">[</span>supervisord<span class="token punctuation">]</span><span class="token assign-left variable">logfile</span><span class="token operator">=</span>/home/log/supervisord.log  <span class="token punctuation">;</span> <span class="token punctuation">(</span>main log <span class="token function">file</span><span class="token punctuation">;</span>default <span class="token variable">$CWD</span>/supervisord.log<span class="token punctuation">)</span><span class="token assign-left variable">logfile_maxbytes</span><span class="token operator">=</span>10KB       <span class="token punctuation">;</span> <span class="token punctuation">(</span>max main logfile bytes b4 rotation<span class="token punctuation">;</span>default 50MB<span class="token punctuation">)</span><span class="token assign-left variable">logfile_backups</span><span class="token operator">=</span><span class="token number">10</span>          <span class="token punctuation">;</span> <span class="token punctuation">(</span>num of main logfile rotation backups<span class="token punctuation">;</span>default <span class="token number">10</span><span class="token punctuation">)</span><span class="token assign-left variable">loglevel</span><span class="token operator">=</span>info               <span class="token punctuation">;</span> <span class="token punctuation">(</span>log level<span class="token punctuation">;</span>default info<span class="token punctuation">;</span> others: debug,warn,trace<span class="token punctuation">)</span><span class="token assign-left variable">pidfile</span><span class="token operator">=</span>/run/supervisord.pid <span class="token punctuation">;</span> <span class="token punctuation">(</span>supervisord pidfile<span class="token punctuation">;</span>default supervisord.pid<span class="token punctuation">)</span><span class="token assign-left variable">nodaemon</span><span class="token operator">=</span>false              <span class="token punctuation">;</span> <span class="token punctuation">(</span>start <span class="token keyword">in</span> foreground <span class="token keyword">if</span> <span class="token boolean">true</span><span class="token punctuation">;</span>default <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token assign-left variable">minfds</span><span class="token operator">=</span><span class="token number">1024</span>                 <span class="token punctuation">;</span> <span class="token punctuation">(</span>min. avail startup <span class="token function">file</span> descriptors<span class="token punctuation">;</span>default <span class="token number">1024</span><span class="token punctuation">)</span><span class="token assign-left variable">minprocs</span><span class="token operator">=</span><span class="token number">200</span>                <span class="token punctuation">;</span> <span class="token punctuation">(</span>min. avail process descriptors<span class="token punctuation">;</span>default <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">[</span>rpcinterface:supervisor<span class="token punctuation">]</span>supervisor.rpcinterface_factory <span class="token operator">=</span> supervisor.rpcinterface:make_main_rpcinterface<span class="token punctuation">[</span>supervisorctl<span class="token punctuation">]</span><span class="token assign-left variable">serverurl</span><span class="token operator">=</span>unix:///run/supervisor/supervisor.sock <span class="token punctuation">;</span> use a unix:// URL  <span class="token keyword">for</span> a unix socket<span class="token assign-left variable">serverurl</span><span class="token operator">=</span>http://127.0.0.1:4001<span class="token assign-left variable">username</span><span class="token operator">=</span>name              <span class="token punctuation">;</span> should be same as http_username <span class="token keyword">if</span> <span class="token builtin class-name">set</span><span class="token assign-left variable">password</span><span class="token operator">=</span>mima               <span class="token punctuation">;</span> should be same as http_password <span class="token keyword">if</span> <span class="token builtin class-name">set</span><span class="token punctuation">[</span>program:alist<span class="token punctuation">]</span>     <span class="token punctuation">;</span>进程名<span class="token builtin class-name">command</span> <span class="token operator">=</span> /home/alist/alist server <span class="token punctuation">;</span>运行的命令directory <span class="token operator">=</span> /home/alist/   <span class="token punctuation">;</span>运行命令所在的文件夹stdout_logfile <span class="token operator">=</span> /home/log/alist.log  <span class="token punctuation">;</span>日志打印文件位置autostart <span class="token operator">=</span> <span class="token boolean">true</span>   <span class="token punctuation">;</span>是否设置启动后自动启进程startsecs <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span>设置启动后几秒开始启进程autorestart <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">;</span>是否自动重启startretries <span class="token operator">=</span> <span class="token number">9999999</span>     <span class="token punctuation">;</span>重启次数stdout_logfile_maxbytes <span class="token operator">=</span> 10KB   <span class="token punctuation">;</span>日志最大容量，达到后新建一个日志文件<span class="token punctuation">[</span>program:Agent<span class="token punctuation">]</span>     <span class="token punctuation">;</span>进程名<span class="token builtin class-name">command</span> <span class="token operator">=</span> /home/nazha/nezha-agent <span class="token parameter variable">-s</span> 网址 <span class="token parameter variable">-p</span> 秘钥 <span class="token punctuation">;</span>运行的命令directory <span class="token operator">=</span> /home/nazha/   <span class="token punctuation">;</span>运行命令所在的文件夹stdout_logfile <span class="token operator">=</span> /home/log/agent.log  <span class="token punctuation">;</span>日志打印文件位置autostart <span class="token operator">=</span> <span class="token boolean">true</span>   <span class="token punctuation">;</span>是否设置启动后自动启进程startsecs <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span>设置启动后几秒开始启进程autorestart <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">;</span>是否自动重启startretries <span class="token operator">=</span> <span class="token number">9999999</span>     <span class="token punctuation">;</span>重启次数stdout_logfile_maxbytes <span class="token operator">=</span> 10KB   <span class="token punctuation">;</span>日志最大容量，达到后新建一个日志文件<span class="token punctuation">[</span>program:message<span class="token punctuation">]</span>     <span class="token punctuation">;</span>进程名<span class="token builtin class-name">command</span> <span class="token operator">=</span> /home/message/message <span class="token parameter variable">--port</span> <span class="token number">3000</span> --log-dir /home/message/logs <span class="token punctuation">;</span>运行的命令directory <span class="token operator">=</span> /home/message/   <span class="token punctuation">;</span>运行命令所在的文件夹stdout_logfile <span class="token operator">=</span> /home/log/message-pusher.log  <span class="token punctuation">;</span>日志打印文件位置autostart <span class="token operator">=</span> <span class="token boolean">true</span>   <span class="token punctuation">;</span>是否设置启动后自动启进程startsecs <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span>设置启动后几秒开始启进程autorestart <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">;</span>是否自动重启startretries <span class="token operator">=</span> <span class="token number">9999999</span>     <span class="token punctuation">;</span>重启次数stdout_logfile_maxbytes <span class="token operator">=</span> 10KB   <span class="token punctuation">;</span>日志最大容量，达到后新建一个日志文件<span class="token punctuation">[</span>program:frp<span class="token punctuation">]</span>     <span class="token punctuation">;</span>进程名<span class="token builtin class-name">command</span> <span class="token operator">=</span> /home/frp/frpc <span class="token parameter variable">-c</span> /home/frp/frpc.ini <span class="token punctuation">;</span>运行的命令directory <span class="token operator">=</span> /home/frp/   <span class="token punctuation">;</span>运行命令所在的文件夹stdout_logfile <span class="token operator">=</span> /home/log/x_ui.log  <span class="token punctuation">;</span>日志打印文件位置autostart <span class="token operator">=</span> <span class="token boolean">true</span>   <span class="token punctuation">;</span>是否设置启动后自动启进程startsecs <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span>设置启动后几秒开始启进程autorestart <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">;</span>是否自动重启startretries <span class="token operator">=</span> <span class="token number">9999999</span>     <span class="token punctuation">;</span>重启次数stdout_logfile_maxbytes <span class="token operator">=</span> 10KB   <span class="token punctuation">;</span>日志最大容量，达到后新建一个日志文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置supervisor目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">supervisord <span class="token parameter variable">-c</span>  /home/supervisord/supervisord.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>重启supervisor</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">supervisorctl updatesupervisorctl reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果出错设置权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/alist<span class="token function">chmod</span> u+x alist<span class="token builtin class-name">cd</span> /home/ddns<span class="token function">chmod</span> u+x ddns<span class="token builtin class-name">cd</span> /home/frp<span class="token function">chmod</span> u+x frpc<span class="token builtin class-name">cd</span> /home/message<span class="token function">chmod</span> u+x message<span class="token builtin class-name">cd</span> /home/nazha<span class="token function">chmod</span> u+x nezha-agent<span class="token builtin class-name">cd</span> /home<span class="token function">mkdir</span> log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置nginx<br>备份源数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/nginx/<span class="token function">cp</span> nginx.conf bnginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改nginx.conf</p><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">user www-data;worker_processes auto;pid /run/nginx.pid;include /etc/nginx/modules-enabled/*.conf;events {worker_connections 768;# multi_accept on;}######http段开始######http {    include      mime.types;    default_type application/octet-stream;    sendfile     on;    keepalive_timeout 65;######守护进程开始######    server {        listen 4002;        server_name sp.puguying.ml;        rewrite ^(.*) https://$server_name$1 permanent;         }    server {        listen 4003 ssl;        server_name sp.puguying.ml;        ssl_certificate /home/ssl/ssl.cer;        ssl_certificate_key /home/ssl/ssl.key;        ssl_session_cache          shared:SSL:1m;                  ssl_session_timeout  5m;        ssl_ciphers  HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers  on;        access_log off;        location / {            proxy_pass http://127.0.0.1:4001;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            }        }######进程守护结束######       ######al网盘开始######    server {        listen 5242;          server_name al.puguying.ml localhost;        rewrite ^(.*) https://$server_name$1 permanent;        }            server {        listen 5243 ssl;        server_name al.puguying.ml localhost;        ssl_certificate /home/ssl/ssl.cer;        ssl_certificate_key /home/ssl/ssl.key;        ssl_session_cache          shared:SSL:1m;                  ssl_session_timeout  5m;        ssl_ciphers  HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers  on;        access_log off;        location / {            proxy_pass http://127.0.0.1:5244;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            }        }######al网盘结束############ddns######    server {        listen 9874;          server_name ddns.puguying.ml localhost;        rewrite ^(.*) https://$server_name$1 permanent;        }            server {        listen 9875 ssl;        server_name ddns.puguying.ml localhost;        ssl_certificate /home/ssl/ssl.cer;        ssl_certificate_key /home/ssl/ssl.key;        ssl_session_cache          shared:SSL:1m;                  ssl_session_timeout  5m;        ssl_ciphers  HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers  on;        access_log off;        location / {            proxy_pass http://127.0.0.1:9876;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            }        }######ddns############青龙######    server {        listen 5701;          server_name ql.puguying.ml localhost;        rewrite ^(.*) https://$server_name$1 permanent;        }            server {        listen 5702 ssl;        server_name ql.puguying.ml localhost;        ssl_certificate /home/ssl/ssl.cer;        ssl_certificate_key /home/ssl/ssl.key;        ssl_session_cache          shared:SSL:1m;                  ssl_session_timeout  5m;        ssl_ciphers  HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers  on;        access_log off;        location / {            proxy_pass http://127.0.0.1:5700;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            }        }######青龙############message-pusher######    server {        listen 3001;          server_name ts.puguying.ml localhost;        rewrite ^(.*) https://$server_name$1 permanent;        }            server {        listen 3002 ssl;        server_name ts.puguying.ml localhost;        ssl_certificate /home/ssl/ssl.cer;        ssl_certificate_key /home/ssl/ssl.key;        ssl_session_cache          shared:SSL:1m;                  ssl_session_timeout  5m;        ssl_ciphers  HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers  on;        access_log off;        location / {            proxy_pass http://127.0.0.1:3000;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            }        }######message-pusher结束######}######http段结束######<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为nginx配置权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> aid_inet,aid_net_raw www-data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>重启nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx <span class="token parameter variable">-s</span> reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于无法使用systemd，只能是我init.d来实现已启动<br>init.d命令</p><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">service &lt; option &gt; <span class="token operator">|</span> <span class="token comment">--status-all | [ service_name [ command | --full-restart ] ]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一键脚本</title>
      <link href="/2023/01/13/yi-jian-jiao-ben/"/>
      <url>/2023/01/13/yi-jian-jiao-ben/</url>
      
        <content type="html"><![CDATA[<h1 id="自用脚本备份"><a href="#自用脚本备份" class="headerlink" title="自用脚本备份"></a>自用脚本备份</h1><p>1.来自<a href="https://github.com/stilleshan">stilleshan</a>大佬的FRP脚本<br>FRPS<br> Linux 服务器 一键脚本安装</p><blockquote><p><em>本脚本目前同时支持 Linux X86 和 ARM 架构</em></p></blockquote><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/jiaoben/frp/azfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrpc.sh <span class="token operator">&amp;&amp;</span> ./azfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/azfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrpc.sh <span class="token operator">&amp;&amp;</span> ./azfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /usr/local/frp/frpc.ini<span class="token comment"># 修改 frpc.ini 配置</span><span class="token function">sudo</span> systemctl restart frpc<span class="token comment"># 重启 frpc 服务即可生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>卸载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/jiaoben/frp/xzfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrpc.sh <span class="token operator">&amp;&amp;</span> ./xzfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/xzfrpc.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrpc.sh <span class="token operator">&amp;&amp;</span> ./xzfrpc.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>FRPS<br>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/frp/azfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrps.sh <span class="token operator">&amp;&amp;</span> ./azfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/azfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x azfrps.sh <span class="token operator">&amp;&amp;</span> ./azfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /usr/local/frp/frps.ini<span class="token comment"># 修改 frps.ini 配置</span><span class="token function">sudo</span> systemctl restart frps<span class="token comment"># 重启 frps 服务即可生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>卸载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/frp/xzfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrps.sh <span class="token operator">&amp;&amp;</span> ./xzfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/frp/xzfrps.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x xzfrps.sh <span class="token operator">&amp;&amp;</span> ./xzfrps.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="frps相关命令"><a href="#frps相关命令" class="headerlink" title="frps相关命令"></a>frps相关命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start frps<span class="token comment"># 启动服务 </span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> frps<span class="token comment"># 开机自启</span><span class="token function">sudo</span> systemctl status frps<span class="token comment"># 状态查询</span><span class="token function">sudo</span> systemctl restart frps<span class="token comment"># 重启服务</span><span class="token function">sudo</span> systemctl stop frps<span class="token comment"># 停止服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.一键修改服务器秘钥登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> jb.puguying.cn/sshmy/key.sh<span class="token punctuation">)</span> <span class="token parameter variable">-g</span> xiayikechun <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/xiayikechun/jiaoben/sshmy/key.sh<span class="token punctuation">)</span> <span class="token parameter variable">-g</span> xiayikechun <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>-o - 覆盖模式，必须写在最前面才会生效<br>-g - 从 GitHub 获取公钥，参数为 GitHub 用户名<br>-u - 从 URL 获取公钥，参数为 URL<br>-f - 从本地文件获取公钥，参数为本地文件路径<br>-p - 修改 SSH 端口，参数为端口号<br>-d - 禁用密码登录<br>3.DDNS-GO</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/xiayikechun/ddns/ddns <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ddns <span class="token operator">&amp;&amp;</span> ./ddns <span class="token parameter variable">-s</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下为国内镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://jb.puguying.cn/ddns/ddns <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ddns <span class="token operator">&amp;&amp;</span> ./ddns <span class="token parameter variable">-s</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装python教程</title>
      <link href="/2023/01/01/an-zhuang-python-jiao-cheng/"/>
      <url>/2023/01/01/an-zhuang-python-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>安装python3<br>更新源</p><pre class="line-numbers language-none"><code class="language-none">sudo apt update &amp;&amp; sudo apt upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装依赖</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install wget build-essential libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载源码</p><pre class="line-numbers language-none"><code class="language-none">cd ~wget https://www.python.org/ftp/python/3.10.0/Python-3.10.0.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解压源码</p><pre class="line-numbers language-none"><code class="language-none">tar xzf Python-3.10.0.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编译源码</p><pre class="line-numbers language-none"><code class="language-none">cd Python-3.10.0./configure --enable-optimizations<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装</p><pre class="line-numbers language-none"><code class="language-none">make altinstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>软连接</p><pre class="line-numbers language-none"><code class="language-none">sudo ln -s /usr/local/bin/python3.10 /usr/bin/python3sudo ln -s /usr/local/bin/pip3.10 /usr/bin/pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓linuxdeploy使用supervisor代替systemd</title>
      <link href="/2022/12/24/supervisord-shi-yong-fang-fa/"/>
      <url>/2022/12/24/supervisord-shi-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>使用linuxdeploy搭建linux后，无法使用systemd，导致很多程序无法部署，研究后决定使用supervisor代替。<br>安装我用的是debian，可以直接命令安装</p><pre class="line-numbers language-none"><code class="language-none">apt-get install supervisor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后回自动配置好开机自启在init.d目录里边，<br>安装结束开始配置需要的程序<br>启动supervisord进程</p><pre class="line-numbers language-none"><code class="language-none">supervisord -c  /etc/supervisor/supervisord.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改自己的内容</p><pre class="line-numbers language-none"><code class="language-none">[inet_http_server]port=0.0.0.0:4001  ;默认配置只能本地访问，配置成0.0.0.0可以通过外部查看监控界面username=     用户名password=   密码[supervisord]logfile=/root/jianguo/log/supervisord.log  ; (main log file;default $CWD/supervisord.log)logfile_maxbytes=10KB       ; (max main logfile bytes b4 rotation;default 50MB)logfile_backups=10          ; (num of main logfile rotation backups;default 10)loglevel=info               ; (log level;default info; others: debug,warn,trace)pidfile=/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)nodaemon=false              ; (start in foreground if true;default false)minfds=1024                 ; (min. avail startup file descriptors;default 1024)minprocs=200                ; (min. avail process descriptors;default 200)[rpcinterface:supervisor]supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface[supervisorctl]serverurl=unix:///run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socketserverurl=http://127.0.0.1:4001username=用户名         ; should be same as http_username if setpassword=密码          ; should be same as http_password if set[program:frp]     ;进程名command = /root/jianguo/frp/frpc -c /root/jianguo/frp/frpc.ini ;运行的命令directory = /root/jianguo/frp/   ;运行命令所在的文件夹stdout_logfile = /root/jianguo/log/x_ui.log  ;日志打印文件位置autostart = true   ;是否设置启动后自动启进程startsecs = 5 ;设置启动后几秒开始启进程autorestart = true  ;是否自动重启startretries = 9999999     ;重启次数stdout_logfile_maxbytes = 10KB   ;日志最大容量，达到后新建一个日志文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后重启主进程supervisord:</p><pre class="line-numbers language-none"><code class="language-none">supervisorctl reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linuxdeploy开机自启</title>
      <link href="/2022/12/16/linuxdeploy-kai-ji-zi-qi/"/>
      <url>/2022/12/16/linuxdeploy-kai-ji-zi-qi/</url>
      
        <content type="html"><![CDATA[<p>使用magisk</p><p>linux开机自启</p><p>在目录/data/adb/post-fs-data.d/<br>填入</p><pre class="line-numbers language-none"><code class="language-none">sleep 100nohup /data/user/0/ru.meefik.linuxdeploy/files/bin/linuxdeploy -p debian start -m &gt;/dev/null 2&gt;&amp;1 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上边的debian是你的容器名称</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建alist配合aria2实现离线下载</title>
      <link href="/2022/12/16/da-jian-alist-pei-he-aria2-shi-xian-chi-xian-xia-zai/"/>
      <url>/2022/12/16/da-jian-alist-pei-he-aria2-shi-xian-chi-xian-xia-zai/</url>
      
        <content type="html"><![CDATA[<p>1.aria2搭建</p><pre class="line-numbers language-none"><code class="language-none">apt install wget curl ca-certificateswget -N git.io/aria2.sh &amp;&amp; chmod +x aria2.sh./aria2.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>按照提示选择就可以了<br>2.安装alist<br>一键安装参考官网<br>我目前使用的是手机搭建的不能使用systemd<br>只能使用init.d代替了<br>下载程序<br><a href="https://github.com/alist-org/alist/releases">下载地址</a></p><pre class="line-numbers language-none"><code class="language-none">wget 文件链接tar -zxvf 文件名chmod +x alist./alist server#记录用户密码后，按ctrl➕c退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在etc/init.d目录创建文件alist，填入下边的代码</p><pre class="line-numbers language-none"><code class="language-none">#!/bin/sh# For RedHat and cousins:# chkconfig: - 99 01# alist# processname: /root/alist### BEGIN INIT INFO# Provides:          /root/alist# Required-Start:# Required-Stop:# Default-Start:     2 3 4 5# Default-Stop:      0 1 6# Short-Description: alist# Description:       alist### END INIT INFOcmd="/root/alist "server""name=$(basename $(readlink -f $0))pid_file="/var/run/$name.pid"stdout_log="/var/log/$name.log"stderr_log="/var/log/$name.err"[ -e /etc/sysconfig/$name ] &amp;&amp; . /etc/sysconfig/$nameget_pid() {    cat "$pid_file"}is_running() {    [ -f "$pid_file" ] &amp;&amp; ps $(get_pid) &gt; /dev/null 2&gt;&amp;1}case "$1" in    start)        if is_running; then            echo "Already started"        else            echo "Starting $name"                        $cmd &gt;&gt; "$stdout_log" 2&gt;&gt; "$stderr_log" &amp;            echo $! &gt; "$pid_file"            if ! is_running; then                echo "Unable to start, see $stdout_log and $stderr_log"                exit 1            fi        fi    ;;    stop)        if is_running; then            echo -n "Stopping $name.."            kill $(get_pid)            for i in $(seq 1 10)            do                if ! is_running; then                    break                fi                echo -n "."                sleep 1            done            echo            if is_running; then                echo "Not stopped; may still be shutting down or shutdown may have failed"                exit 1            else                echo "Stopped"                if [ -f "$pid_file" ]; then                    rm "$pid_file"                fi            fi        else            echo "Not running"        fi    ;;    restart)        $0 stop        if is_running; then            echo "Unable to stop, will not attempt to start"            exit 1        fi        $0 start    ;;    status)        if is_running; then            echo "Running"        else            echo "Stopped"            exit 1        fi    ;;    *)    echo "Usage: $0 {start|stop|restart|status}"    exit 1    ;;esacexit 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果文件不在root目录，记得修改里边的路径</p><p>然后执行</p><pre class="line-numbers language-none"><code class="language-none">cd /etc/init.dsudo update-rc.d alist defaults<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以参考这个文章 <a href="http://t.csdn.cn/doxT0">CSDN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓linuxdeploy使用DDNS</title>
      <link href="/2022/12/16/an-zhuo-linuxdeploy-shi-yong-ddns/"/>
      <url>/2022/12/16/an-zhuo-linuxdeploy-shi-yong-ddns/</url>
      
        <content type="html"><![CDATA[<h2 id="前言不知道为什么下载最新版的一直报错建议大家可以先使用3-1版安装下边"><a href="#前言不知道为什么下载最新版的一直报错建议大家可以先使用3-1版安装下边" class="headerlink" title="前言不知道为什么下载最新版的一直报错建议大家可以先使用3.1版安装下边"></a>前言不知道为什么下载最新版的一直报错建议大家可以先使用3.1版安装下边</h2><p>3.1版<br><a href="https://github.com/jeessy2/ddns-go/releases/download/v3.1.0/ddns-go_3.1.0_Linux_arm64.tar.gz">github 3.1链接</a><br><a href="https://wj.puguying.cn/ddns-go_3.1.0_Linux_arm64.tar.gz">站长的镜像国内可下载</a></p><pre class="line-numbers language-none"><code class="language-none">wget https://github.com/jeessy2/ddns-go/releases/download/v3.1.0/ddns-go_3.1.0_Linux_arm64.tar.gz# 如果下载失败换成站长的镜像wget https://wj.puguying.cn/ddns-go_3.1.0_Linux_arm64.tar.gztar -zxvf ddns-go_3.1.0_Linux_arm64.tar.gzsudo ./ddns-go -s install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问  你的ip:9876  进行设置<br>接下来就可以愉快的玩耍啦</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>github图床搭建</title>
      <link href="/2022/12/04/github-tu-chuang-da-jian/"/>
      <url>/2022/12/04/github-tu-chuang-da-jian/</url>
      
        <content type="html"><![CDATA[<p>这里是用的PicX 图床<br>我用的是宝塔搭建的<br>1.创建网站<br>2.进去网站目录<br>执行下边命令拉库</p><pre class="line-numbers language-none"><code class="language-none">git clone -b gh-pages https://github.com/XPoet/picx.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.回到网站设置，设置网站目录为picx目录<br>4.设置定时任务</p><pre class="line-numbers language-none"><code class="language-none">#!/bin/shcd /www/wwwroot/网站目录git pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其余的可以参考官网设置<br><a href="https://picx-docs.xpoet.cn/">官方文档</a></p><p>测试图床<br>微信收款码<br><img src="https://cdn.staticaly.com/gh/xiayikeqiu/tuchuang@master/20221204/%E5%BE%AE%E4%BF%A1%E6%94%B6%E6%AC%BE%E7%A0%81.webp"><br>支付宝收款码<br><img src="https://cdn.staticaly.com/gh/xiayikeqiu/tuchuang@master/20221204/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%B6%E6%AC%BE%E7%A0%81.webp"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建以及使用Github Actions自动部署</title>
      <link href="/2022/12/04/hexo-bu-shu/"/>
      <url>/2022/12/04/hexo-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="安装HEXO依赖程序"><a href="#安装HEXO依赖程序" class="headerlink" title="安装HEXO依赖程序"></a>安装HEXO依赖程序</h1><ol><li>安装git<br>termux安装命令<pre class="line-numbers language-none"><code class="language-none">pkg install git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>Linux (Ubuntu, Debian)：<pre class="line-numbers language-none"><code class="language-none">sudo apt-get install git-core<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>Linux (Fedora, Red Hat, CentOS)：<pre class="line-numbers language-none"><code class="language-none">sudo yum install git-core<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>2.安装node<br>termux安装命令<pre class="line-numbers language-none"><code class="language-none">pkg install nodejs-lts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>linux安装方法参考github<br><a href="https://github.com/xiayikechun/node-">链接地址</a></li></ol><h1 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h1><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-clihexo init hexocd hexonpm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="接下来开始设置自动部署"><a href="#接下来开始设置自动部署" class="headerlink" title="接下来开始设置自动部署"></a>接下来开始设置自动部署</h1><p>1.新建github仓库<br>2.在hexo目录执行下边的命令</p><pre class="line-numbers language-none"><code class="language-none">git init   // 1. 初始化项目文件夹 git add .  // 2. 将所有文件添加到暂存区 git commit -m "first commit"   // 3. 提交到本地仓库，双引号内是提交的备注信息 git remote add origin XXX     //  4. （XXX就是你github或者码云等远程仓库的地址，git branch这个命令可以看到你所在的分支，删除某个仓库地址使用git remote rm origin） git pull    // 5. 拉取远程主分支信息，首次拉取合并信息 git push -u -f origin hexo  // 6. 提交到远程仓库，这个命令中的 -f 是强制推送，因为远程仓库只有初始化的文件，所以强制推送上去就行了，不加-f 会报当前分支没有远程分支，强制推送可以覆盖master，这样就完成了第一次提交的步骤)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.代码推送完成以后<br>到github仓库新建<br>新建<br>.github/workflows/deployment.yml<br>填入内容</p><pre class="line-numbers language-none"><code class="language-none">name: Deploymenton:  push:    branches: [hexo] # only push events on source branch trigger deploymentjobs:  hexo-deployment:    runs-on: ubuntu-latest    env:      TZ: Asia/Shanghai    steps:    - name: Checkout source      uses: actions/checkout@v2      with:        submodules: true    - name: Setup Node.js      uses: actions/setup-node@v1      with:        node-version: '12.x'    - name: Install dependencies &amp; Generate static files      run: |        node -v        npm i -g hexo-cli        npm i        hexo clean        hexo g    - name: Deploy to Github Pages      env:        GIT_NAME: github用户名        GIT_EMAIL: github邮箱        REPO: github.com/github用户名/博客仓库名        GH_TOKEN: ${{ secrets.HEXO_TOKEN }}     # can be created or changed in the Github/Repository/Setting/Secrets/Actions      run: |        cd ./public &amp;&amp; echo 自定义域名 &gt; CNAME &amp;&amp; git init &amp;&amp; git add .        git config --global user.name $GIT_NAME        git config --global user.email $GIT_EMAIL        git commit -m "Site deployed by GitHub Actions"        git push --force --quiet "https://$GH_TOKEN@$REPO" master:master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改代码中的自定义域名,用户名,邮箱,博客仓库地址</p><p>4.创建github token<br>路径：github设置<del>开发者设置</del>个人访问令牌<del>令牌（经典）</del>生成新的令牌（经典）<del>权限选择repo<br>记得及时复制，只显示一次<br>5.设置GH_TOKEN<br>返回博客仓库</del>仓库设置~设置秘钥<br>6.快速写博客</p><pre class="line-numbers language-none"><code class="language-none">https://github.com/xiayikechun/xiayikechun.github.io/new/hexo/source/_posts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改成自己的仓库地址和分支名</p><p>如有不足请补充</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FRP搭建教程纯手动</title>
      <link href="/2022/12/01/frp-da-jian-jiao-cheng/"/>
      <url>/2022/12/01/frp-da-jian-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>＃ 已更新新方法可以参考<br><a href="https://github.com/fatedier/frp/releases">链接地址</a></p><h2 id="1-下载frp程序"><a href="#1-下载frp程序" class="headerlink" title="1.  下载frp程序"></a>1.  下载frp程序</h2><p><a href="https://github.com/fatedier/frp/releases">Frp开源地址</a></p><p>注意选择对应的系统版本</p><h2 id="2-编辑服务端frps-ini文件（可以直接访问的）可以参考下边的配置"><a href="#2-编辑服务端frps-ini文件（可以直接访问的）可以参考下边的配置" class="headerlink" title="2. 编辑服务端frps.ini文件（可以直接访问的）可以参考下边的配置"></a>2. 编辑服务端frps.ini文件（可以直接访问的）可以参考下边的配置</h2><pre class="line-numbers language-none"><code class="language-none">[common]# 监听ipv4和ipv6bind_addr = ::# frp监听的端口，默认是7000，可以改成其他的bind_port = 700# 授权码，请改成更复杂的token = 123456789# 这个token之后在客户端会用到# frp管理后台端口，请按自己需求更改dashboard_port = 7500# frp管理后台用户名和密码，请改成自己的dashboard_user = admindashboard_pwd = adminenable_prometheus = true# 配置http和https服务要监听的端口，这两个端口也要在阿里云安全组上放开，且不能是服务器已经使用的端口vhost_http_port = 80vhost_https_port = 443#默认404界面custom_404_page = /frp/404.html# frp日志配置log_file = /frp/frps.loglog_level = infolog_max_days = 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-编辑frps开机自启这里使用systemd"><a href="#3-编辑frps开机自启这里使用systemd" class="headerlink" title="3.编辑frps开机自启这里使用systemd"></a>3.编辑frps开机自启这里使用systemd</h2><p>在 /etc/systemd/system 目录下创建一个 frps.service 文件</p><p>内容参考下边的</p><pre class="line-numbers language-none"><code class="language-none">[Unit]Description=frp serviceAfter=network.target[Service]TimeoutStartSec=30#注意下边的路径换成你自己的ExecStart=/frp/frps -c /frp/frps.iniExecStop=/bin/kill $MAINPID[Install]WantedBy=multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>到这里服务端配置就完成了</p><h2 id="4-配置客户端frpc-ini配置（需要穿透的服务器）"><a href="#4-配置客户端frpc-ini配置（需要穿透的服务器）" class="headerlink" title="4.配置客户端frpc.ini配置（需要穿透的服务器）"></a>4.配置客户端frpc.ini配置（需要穿透的服务器）</h2><p>可以参考下边的配置</p><pre class="line-numbers language-none"><code class="language-none">[common]# frps服务器地址server_addr = frp.puguying.cn上边配置的端口server_port = 7000log_max_days = 3上边配置的密码token = 123456login_fail_exit = false[ssh-xxx]type = tcplocal_ip = 127.0.0.1local_port = 22remote_port = 10086<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-配置客户端开机自启"><a href="#5-配置客户端开机自启" class="headerlink" title="5.配置客户端开机自启"></a>5.配置客户端开机自启</h2><p>在/etc/systemd/system 目录下创建一个 frpc.service 文件</p><p>参考配置</p><pre class="line-numbers language-none"><code class="language-none">[Unit]Description=frp serviceAfter=network.target[Service]TimeoutStartSec=30#修改自己的目录ExecStart=/frp/frpc -c /frp/frpc.iniExecStop=/bin/kill $MAINPID[Install]WantedBy=multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>到这里所有配置工作完成</p><h2 id="6-使用-systemd-命令，管理-frps。"><a href="#6-使用-systemd-命令，管理-frps。" class="headerlink" title="6.使用 systemd 命令，管理 frps。"></a>6.使用 systemd 命令，管理 frps。</h2><pre class="line-numbers language-none"><code class="language-none"># 启动frp服务端systemctl start frps客户端systemctl start frpc# 停止frp服务端systemctl stop frps客户端systemctl stop frpc# 重启frp服务端systemctl restart frps客户端systemctl restart frpc# 查看frp状态服务端systemctl status frps客户端systemctl status frpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-配置-frps-开机自启。"><a href="#7-配置-frps-开机自启。" class="headerlink" title="7.配置 frps 开机自启。"></a>7.配置 frps 开机自启。</h2><pre class="line-numbers language-none"><code class="language-none">服务端systemctl enable frps客户端systemctl enable frpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微软E5</title>
      <link href="/2022/06/27/wei-ruan-e5-wei-ruan-e5/"/>
      <url>/2022/06/27/wei-ruan-e5-wei-ruan-e5/</url>
      
        <content type="html"><![CDATA[<p>Microsoft 365 / Office 365 转发邮件失败，提示：Delivery has failed to these recipients or groups，怎么办？<a href="https://protection.office.com/antispam">https://protection.office.com/antispam</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记本配置内网+外网双网卡教程</title>
      <link href="/2022/06/26/bi-ji-ben-pei-zhi-nei-wang-wai-wang-shuang-wang-qia-jiao-cheng-bi-ji-ben-pei-zhi-nei-wang-wai-wang-shuang-wang-ka-jiao-cheng/"/>
      <url>/2022/06/26/bi-ji-ben-pei-zhi-nei-wang-wai-wang-shuang-wang-qia-jiao-cheng-bi-ji-ben-pei-zhi-nei-wang-wai-wang-shuang-wang-ka-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="重点先设置这个："><a href="#重点先设置这个：" class="headerlink" title="重点先设置这个："></a>重点先设置这个：</h1><p>将上内网的网卡地址设为静态地址，不设网关，此时重启系统时就不会产生默认路由了</p><p>配置静态路由表：</p><pre class="line-numbers language-none"><code class="language-none">route add -p 10.0.0.0（内网地址） MASK 255.255.0.0 172.16.0.1（网关）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux下搭建E5SubBot为E5续期</title>
      <link href="/2022/05/12/linux-xia-da-jian-e5subbot-wei-e5-xu-qi-linux-xia-da-jian-e5subbot-wei-e5-xu-qi/"/>
      <url>/2022/05/12/linux-xia-da-jian-e5subbot-wei-e5-xu-qi-linux-xia-da-jian-e5subbot-wei-e5-xu-qi/</url>
      
        <content type="html"><![CDATA[<h4 id="这里以宝塔为基础"><a href="#这里以宝塔为基础" class="headerlink" title="这里以宝塔为基础"></a>这里以宝塔为基础</h4><p>定位到准备存放数据的目录<br>例如：/www/wwwroot/e5/bot<br>选择远程下载<br>访问E5SubBot项目地址<br>E5SubBot项目Github地址：<a href="https://github.com/iyear/E5SubBot/releases">https://github.com/iyear/E5SubBot/releases</a></p><p>选择合适的版本<br>右键选择复制链接地址，粘贴到离线下载框内。<br>解压文件，设置   E5SubBot   权限为  755/root</p><h4 id="配置E5Subbot"><a href="#配置E5Subbot" class="headerlink" title="配置E5Subbot"></a>配置E5Subbot</h4><p>目录下创建一个config.yml文件，配置telegram bot和mysql的具体信息。<br>示例：</p><pre class="line-numbers language-none"><code class="language-none">bot_token: 你的TG机器人的TOKENnotice: "这里可以填写机器人的通知信息"admin: 填写你tg的id，使其作为管理员# socks5: 127.0.0.1:1080bindmax: 3goroutine: 10errlimit: 999  aaa  bbb  ccccron: "1 */1 * * *"db: sqlitetable: users# mysql:#  host: 127.0.0.1#  port: 3306#  user: root#  password: pwd#  database: e5subsqlite:  db: data.db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置自动启动"><a href="#设置自动启动" class="headerlink" title="设置自动启动"></a>设置自动启动</h4><p>在/etc/systemd/system 新建 e5sub.service<br>填写以下配置（根据实际情况修改）：</p><pre class="line-numbers language-none"><code class="language-none">[Unit]Description=Telegram E5Sub Bot [Service]Type=simpleWorkingDirectory=/www/wwwroot/e5/botExecStart=/www/wwwroot/e5/bot/E5SubBotRestart=alwaysRestartSec=30 [Install]WantedBy=multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h4><p>systemd单元文件编辑完成后需要重新载入服务配置文件。</p><pre class="line-numbers language-none"><code class="language-none">systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后开启服务。</p><pre class="line-numbers language-none"><code class="language-none">systemctl start e5sub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看服务状态。</p><pre class="line-numbers language-none"><code class="language-none">systemctl status e5sub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后设置服务自启。</p><pre class="line-numbers language-none"><code class="language-none">systemctl enable e5sub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker教程命令</title>
      <link href="/2022/05/04/docker-jiao-cheng-ming-ling-docker-jiao-cheng-ming-ling/"/>
      <url>/2022/05/04/docker-jiao-cheng-ming-ling-docker-jiao-cheng-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><pre class="line-numbers language-none"><code class="language-none">curl -sSL https://get.docker.com/ | sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h3><pre class="line-numbers language-none"><code class="language-none">systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><pre class="line-numbers language-none"><code class="language-none">systemctl enable docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除所有镜像"><a href="#删除所有镜像" class="headerlink" title="删除所有镜像"></a>删除所有镜像</h3><pre class="line-numbers language-none"><code class="language-none">docker rmi $(docker images -q)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="停止所有容器"><a href="#停止所有容器" class="headerlink" title="停止所有容器"></a>停止所有容器</h3><pre class="line-numbers language-none"><code class="language-none">docker stop $(docker ps -a -q)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除所有容器"><a href="#删除所有容器" class="headerlink" title="删除所有容器"></a>删除所有容器</h3><pre class="line-numbers language-none"><code class="language-none">docker rm $(docker ps -a -q)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动所有容器"><a href="#启动所有容器" class="headerlink" title="启动所有容器"></a>启动所有容器</h3><pre class="line-numbers language-none"><code class="language-none">docker start $(docker ps -a -q)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Euserv部署Microsoft 365 E5 Renew X</title>
      <link href="/2022/04/23/shi-yong-euserv-bu-shu-microsoft-365-e5-renew-x-shi-yong-euserv-an-zhuang-microsoft365e5renewx/"/>
      <url>/2022/04/23/shi-yong-euserv-bu-shu-microsoft-365-e5-renew-x-shi-yong-euserv-an-zhuang-microsoft365e5renewx/</url>
      
        <content type="html"><![CDATA[<h4 id="1、安装系统选择Debian10或者其他，本文以Debian10为例"><a href="#1、安装系统选择Debian10或者其他，本文以Debian10为例" class="headerlink" title="1、安装系统选择Debian10或者其他，本文以Debian10为例"></a>1、安装系统选择Debian10或者其他，本文以Debian10为例</h4><h4 id="2、安装WARP，是服务器可以访问ipv4"><a href="#2、安装WARP，是服务器可以访问ipv4" class="headerlink" title="2、安装WARP，是服务器可以访问ipv4"></a>2、安装WARP，是服务器可以访问ipv4</h4><pre class="line-numbers language-none"><code class="language-none">wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3、安装宝塔方便管理文件"><a href="#3、安装宝塔方便管理文件" class="headerlink" title="3、安装宝塔方便管理文件"></a>3、安装宝塔方便管理文件</h4><pre class="line-numbers language-none"><code class="language-none">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh 12f2c1d72<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用cloudflare使服务器可以用ipv4访问，修改端口为cloudflare支持的端口，可以参考：<a href="https://puguying.cn/archives/cloudflare-zhi-chi-de-duan-kou">CLOUDFLARE支持的端口</a><br>我这里以8080为参考<br>注意：如果套了cloudflare后访问还是提示错误521的话，那么就输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">echo '::' &gt; /www/server/panel/data/ipv6.pl &amp;&amp; /etc/init.d/bt restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果访问还是520错误之类的，有可能没有开启防火墙端口，输入如下命令分别回车：</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --permanent --zone=public --add-port=8080/tcpfirewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4、安装-Asp-Net-Core-SDK-3-1-运行环境"><a href="#4、安装-Asp-Net-Core-SDK-3-1-运行环境" class="headerlink" title="4、安装 Asp.Net Core SDK 3.1 运行环境"></a>4、安装 Asp.Net Core SDK 3.1 运行环境</h4><p>这里的示例是Debian10 ，其它 OS 请参考在 <a href="https://docs.microsoft.com/zh-cn/dotnet/core/install/linux">Linux 发行版上安装 .NET | Microsoft Docs</a></p><pre class="line-numbers language-none"><code class="language-none">wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.debsudo dpkg -i packages-microsoft-prod.debrm packages-microsoft-prod.deb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo apt-get update; \  sudo apt-get install -y apt-transport-https &amp;&amp; \  sudo apt-get update &amp;&amp; \  sudo apt-get install -y dotnet-sdk-3.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、创建-SSL-证书"><a href="#5、创建-SSL-证书" class="headerlink" title="5、创建 SSL 证书"></a>5、创建 SSL 证书</h4><p>这里使用的是阿里云的免费证书，可以直接下载  PFX  类型证书</p><p><img src="/upload/2022/05/image.png" alt="image"></p><p>选择IIS类型证书下载，里边包含PFX证书和密码。</p><h4 id="6、下载部署文件"><a href="#6、下载部署文件" class="headerlink" title="6、下载部署文件"></a>6、下载部署文件</h4><p><a href="https://blog.csdn.net/qq_33212020/article/details/119747634">发布地址</a><br><a href="https://sundayrx.lanzoui.com/aW09Lsss755">下载地址</a></p><h4 id="7、上传文件到任意目录"><a href="#7、上传文件到任意目录" class="headerlink" title="7、上传文件到任意目录"></a>7、上传文件到任意目录</h4><p>这里以  /www/wwwroot/   目录为例<br><img src="/upload/2022/05/image-1652336408618.png" alt="image-1652336408618"><br><img src="/upload/2022/05/image-1652336431778.png" alt="image-1652336431778"></p><h4 id="8、配置Config-xml"><a href="#8、配置Config-xml" class="headerlink" title="8、配置Config.xml"></a>8、配置Config.xml</h4><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">﻿&lt;?xml version="1.0" encoding="utf-8" ?&gt;&lt;Configuration&gt;&lt;!--站点服务器基本配置--&gt;&lt;Serivce&gt;&lt;!--服务访问端口--&gt;&lt;Port&gt;1066&lt;/Port&gt;&lt;!--管理员密码(管理员登录路由/Admin/Login) 重要：首次启动前必须更改--&gt;&lt;LoginPassword&gt;123456&lt;/LoginPassword&gt;&lt;!--是否启用内核多线程支持--&gt;&lt;CoreMultiThread&gt;true&lt;/CoreMultiThread&gt;&lt;!--网站备案号（选填）--&gt;&lt;ICP&gt;&lt;/ICP&gt;&lt;!--备案管理查询机构跳转链接（选填）--&gt;&lt;ICPLink&gt;https://beian.miit.gov.cn&lt;/ICPLink&gt;&lt;/Serivce&gt;&lt;!--站点Kestrel服务器HTTPS配置 （只支持IIS证书类型 即PFX格式的证书）--&gt;&lt;HTTPS&gt;&lt;!--Kestrel是否启用HTTPS(SSL加密传输)--&gt;&lt;Enable&gt;true&lt;/Enable&gt;&lt;!--SSL证书文件名 (需要将PFX格式的SSL证书放置于该配置文件的同级目录Deploy文件夹下) 如e5.sundayrx.net.pfx--&gt;&lt;!--不填则默认使用Dev localhost 本地证书--&gt;&lt;Certificate&gt;&lt;/Certificate&gt;&lt;!--SSL证书密钥(PFX证书的访问密钥)--&gt;&lt;Password&gt;&lt;/Password&gt;&lt;/HTTPS&gt;&lt;!--共享站点配置,不共享可无视以下内容 (若要共享站点 请自备以下所需的配置信息 且配置中HTTPS必须启用)--&gt;&lt;ShareSite&gt;&lt;!--是否启用站点共享--&gt;&lt;Enable&gt;true&lt;/Enable&gt;&lt;!--SMTP邮件发送支持--&gt;&lt;SMTP&gt;&lt;!--发件邮箱--&gt;&lt;Email&gt;&lt;/Email&gt;&lt;!--邮箱密钥--&gt;&lt;Password&gt;&lt;/Password&gt;&lt;!--SMTP服务器地址--&gt;&lt;Host&gt;&lt;/Host&gt;&lt;!--SMTP服务器端口--&gt;&lt;Port&gt;&lt;/Port&gt;&lt;!--SMTP服务器是否使用SSL传输--&gt;&lt;EnableSSL&gt;true&lt;/EnableSSL&gt;&lt;/SMTP&gt;&lt;!--第三方OAuth登录支持(至少启用以下一种OAuth否则其他用户无法注册)--&gt;&lt;OAuth&gt;&lt;!--微软登录授权--&gt;&lt;Microsoft&gt;&lt;!--是否启用该OAuth--&gt;&lt;Enable&gt;true&lt;/Enable&gt;&lt;!--应用程序Id--&gt;&lt;ClientId&gt;&lt;/ClientId&gt;&lt;!--应用程序访问机密--&gt;&lt;ClientSecret&gt;&lt;/ClientSecret&gt;&lt;/Microsoft&gt;&lt;!--GitHub登录授权--&gt;&lt;Github&gt;&lt;!--是否启用该OAuth--&gt;&lt;Enable&gt;false&lt;/Enable&gt;&lt;!--应用程序Id--&gt;&lt;ClientId&gt;&lt;/ClientId&gt;&lt;!--应用程序访问机密--&gt;&lt;ClientSecret&gt;&lt;/ClientSecret&gt;&lt;/Github&gt;&lt;/OAuth&gt;&lt;!--站点系统设置--&gt;&lt;System&gt;&lt;!--站点启动后默认是否允许用户注册 建议为false--&gt;&lt;AllowRegister&gt;false&lt;/AllowRegister&gt;&lt;!--站点启动后默认公告（换行符请使用 &amp;#x000D;&amp;#x000A; 进行换行）--&gt;&lt;Notice&gt;&lt;/Notice&gt;&lt;!--站点运营者--&gt;&lt;Master&gt;&lt;/Master&gt;&lt;!--站点运营者推广链接--&gt;&lt;MasterLink&gt;&lt;/MasterLink&gt;&lt;!--站点新用户默认配额数--&gt;&lt;DefaultQuota&gt;1&lt;/DefaultQuota&gt;&lt;!--站点自动特赦时间间隔 （单位：天 至少30天）--&gt;&lt;AutoSpecialPardonInterval&gt;30&lt;/AutoSpecialPardonInterval&gt;&lt;/System&gt;&lt;/ShareSite&gt;&lt;/Configuration&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9、配置-Nginx反代"><a href="#9、配置-Nginx反代" class="headerlink" title="9、配置 Nginx反代"></a>9、配置 Nginx反代</h4><p>示例：<a href="https://127.0.0.1:1066/">https://127.0.0.1:1066</a><br><img src="/upload/2022/05/image-1652337960167.png" alt="image-1652337960167"></p><h4 id="10、-制作守护程序"><a href="#10、-制作守护程序" class="headerlink" title="10、 制作守护程序"></a>10、 制作守护程序</h4><p>在/etc/systemd/system 文件夹新建 e5renewx.service  文件<br>复制以下内容到e5renewx.service(修改对应的内容)</p><pre class="line-numbers language-none"><code class="language-none">[Unit]Description="Microsoft E5 Renew API Web dotnet Service"After=network.targetStartLimitIntervalSec=0[Service]Type=simpleGuessMainPID=trueEnvironment=DOTNET_CLI_HOME=/tmpWorkingDirectory=/www/wwwroot/e5StandardOutput=journalStandardError=journalExecStart=/usr/bin/dotnet /www/wwwroot/e5/Microsoft365_E5_Renew_X.dllRestart=alwaysRestartSec=1[Install]WantedBy=multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">#重新加载配置文件systemctl daemon-reload#开机自启动systemctl enable e5renewx.service#启动服务systemctl start e5renewx.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器开启秘钥登录</title>
      <link href="/2022/04/15/fu-wu-qi-kai-qi-mi-yao-deng-lu-fu-wu-qi-kai-qi-mi-yao-deng-lu/"/>
      <url>/2022/04/15/fu-wu-qi-kai-qi-mi-yao-deng-lu-fu-wu-qi-kai-qi-mi-yao-deng-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="1：登录服务器：并执行以下命令生成密钥和公钥"><a href="#1：登录服务器：并执行以下命令生成密钥和公钥" class="headerlink" title="1：登录服务器：并执行以下命令生成密钥和公钥"></a>1：登录服务器：并执行以下命令生成密钥和公钥</h3><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -m PEM -t rsa -C "xiayikechun"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2：配置-ssh-使用密钥"><a href="#2：配置-ssh-使用密钥" class="headerlink" title="2：配置 ssh 使用密钥"></a>2：配置 ssh 使用密钥</h3><h4 id="进入-ssh-目录"><a href="#进入-ssh-目录" class="headerlink" title="进入 ssh 目录"></a>进入 ssh 目录</h4> <pre class="line-numbers language-none"><code class="language-none">cd ~/.ssh 或者 cd /root/.ssh/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="然后安装公钥-authorized-keys"><a href="#然后安装公钥-authorized-keys" class="headerlink" title="然后安装公钥 authorized_keys"></a>然后安装公钥 authorized_keys</h4>  <pre class="line-numbers language-none"><code class="language-none">cp id_rsa.pub authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注意，如果存在-authorized-keys-则采用写入方式"><a href="#注意，如果存在-authorized-keys-则采用写入方式" class="headerlink" title="注意，如果存在 authorized_keys 则采用写入方式"></a>注意，如果存在 authorized_keys 则采用写入方式</h4> <pre class="line-numbers language-none"><code class="language-none">cat id_rsa.pub &gt;&gt; authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="设置公钥权限"><a href="#设置公钥权限" class="headerlink" title="设置公钥权限"></a>设置公钥权限</h4><pre class="line-numbers language-none"><code class="language-none">chmod 600 authorized_keyschmod 700 ~/.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3：修改-ssh-配置文件"><a href="#3：修改-ssh-配置文件" class="headerlink" title="3：修改 ssh 配置文件"></a>3：修改 ssh 配置文件</h3><pre class="line-numbers language-none"><code class="language-none">#打开修改vi  /etc/ssh/sshd_config 然后对应如下修改： StrictModes no  #此项默认为注释关闭 PubkeyAuthentication yesRSAAuthentication yes    #默认不存在，可放到上面一行的下边AuthorizedKeysFile      .ssh/authorized_keys      #ssh文件位置，此项默认设置相同PasswordAuthentication yes                        #使用密码  no为不使用密码AuthenticationMethods publickey,password          #如果密码和密钥都使用在末尾加上此行代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="完成以上步骤设置后，重启-sshd-服务："><a href="#完成以上步骤设置后，重启-sshd-服务：" class="headerlink" title="完成以上步骤设置后，重启 sshd 服务："></a>完成以上步骤设置后，重启 sshd 服务：</h3><pre class="line-numbers language-none"><code class="language-none">systemctl restart sshd.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>甲骨文DD系统</title>
      <link href="/2022/04/15/jia-gu-wen-dd-xi-tong-jia-gu-wen-dd-xi-tong/"/>
      <url>/2022/04/15/jia-gu-wen-dd-xi-tong-jia-gu-wen-dd-xi-tong/</url>
      
        <content type="html"><![CDATA[<p>安装AMD服务器选择ubuntu20.04系统，不要选择mino的<br>安装的时候记得下载秘钥<br>登录名</p><pre class="line-numbers language-al" data-language="al"><code class="language-al">ubuntu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登录上去切换到root用户</p><pre class="line-numbers language-al" data-language="al"><code class="language-al">sudo <span class="token operator">-</span>i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行脚本</p><pre class="line-numbers language-al" data-language="al"><code class="language-al">echo root<span class="token punctuation">:</span>RUYO |sudo chpasswd rootsudo sed <span class="token operator">-</span>i <span class="token string">'s/^#\?PermitRootLogin.*/PermitRootLogin yes/g'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>ssh<span class="token operator">/</span>sshd_config<span class="token punctuation">;</span>sudo sed <span class="token operator">-</span>i <span class="token string">'s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>ssh<span class="token operator">/</span>sshd_config<span class="token punctuation">;</span>sudo service sshd restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上完成以后开始DD</p><pre class="line-numbers language-al" data-language="al"><code class="language-al">#更新apt源apt<span class="token operator">-</span>get update#安装需要的工具包apt<span class="token operator">-</span>get install <span class="token operator">-</span>y xz<span class="token operator">-</span>utils openssl gawk <span class="token class-name">file</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>debian10</p><pre class="line-numbers language-al" data-language="al"><code class="language-al">bash <span class="token operator">&lt;</span><span class="token punctuation">(</span>wget <span class="token operator">-</span><span class="token operator">-</span>no<span class="token operator">-</span>check<span class="token operator">-</span>certificate <span class="token operator">-</span>qO<span class="token operator">-</span> <span class="token string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span><span class="token punctuation">)</span> <span class="token operator">-</span>d <span class="token number">10.3</span> <span class="token operator">-</span>v <span class="token number">64</span> <span class="token operator">-</span>a <span class="token operator">-</span>firmware<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>DD安装完毕之后，请立即更新密码。默认用户名为：root，默认密码为：MoeClub.org</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu安装npm个nodejs</title>
      <link href="/2022/04/15/ubuntu-an-zhuang-npm-ge-nodejs-ubuntu-an-zhuang-npm-ge-nodejs/"/>
      <url>/2022/04/15/ubuntu-an-zhuang-npm-ge-nodejs-ubuntu-an-zhuang-npm-ge-nodejs/</url>
      
        <content type="html"><![CDATA[<h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">sudo apt-get install nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h4><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">sudo apt-get install npm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="升级npm"><a href="#升级npm" class="headerlink" title="升级npm"></a>升级npm</h4><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">npm i -g npm<span class="token punctuation">@</span>6<span class="token punctuation">.</span>4<span class="token punctuation">.</span>0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装n"><a href="#安装n" class="headerlink" title="安装n"></a>安装n</h4><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">sudo npm install n -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装最新版"><a href="#安装最新版" class="headerlink" title="安装最新版"></a>安装最新版</h4><pre class="line-numbers language-agda" data-language="agda"><code class="language-agda">n lts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>typecho去掉index.php</title>
      <link href="/2022/04/15/typecho-qu-diao-indexphp-typecho-qu-diao-indexphp/"/>
      <url>/2022/04/15/typecho-qu-diao-indexphp-typecho-qu-diao-indexphp/</url>
      
        <content type="html"><![CDATA[<p>后台永久链接设置为启动，自定义/{cid}.html<br>宝塔网站配置文件增加</p><pre class="line-numbers language-none"><code class="language-none">if (!-e $request_filename) {  rewrite ^(.*)$ /index.php$1 last;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>联通烽火HG680R机顶盒破解教程</title>
      <link href="/2022/04/15/lian-tong-feng-huo-hg680r-ji-ding-he-po-jie-jiao-cheng-lian-tong-feng-huo-hg680r-ji-ding-he-po-jie-jiao-cheng/"/>
      <url>/2022/04/15/lian-tong-feng-huo-hg680r-ji-ding-he-po-jie-jiao-cheng-lian-tong-feng-huo-hg680r-ji-ding-he-po-jie-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h4 id="1-首先在淘宝买了一根ttl线，5快包邮的"><a href="#1-首先在淘宝买了一根ttl线，5快包邮的" class="headerlink" title="1. 首先在淘宝买了一根ttl线，5快包邮的"></a>1. 首先在淘宝买了一根ttl线，5快包邮的</h4><h4 id="2-卖家提供的驱动安装好"><a href="#2-卖家提供的驱动安装好" class="headerlink" title="2. 卖家提供的驱动安装好"></a>2. 卖家提供的驱动安装好</h4><h4 id="3-首先把TTL不接任何东西插到电脑上面需要注意如下设置：TTL设置电平3-3V，计算机（我的电脑）-gt-管理-gt-设备管理器-gt-CH340-gt-波特率选择115200点确定"><a href="#3-首先把TTL不接任何东西插到电脑上面需要注意如下设置：TTL设置电平3-3V，计算机（我的电脑）-gt-管理-gt-设备管理器-gt-CH340-gt-波特率选择115200点确定" class="headerlink" title="3. 首先把TTL不接任何东西插到电脑上面需要注意如下设置：TTL设置电平3.3V，计算机（我的电脑）->管理->设备管理器->CH340->波特率选择115200点确定"></a>3. 首先把TTL不接任何东西插到电脑上面需要注意如下设置：TTL设置电平3.3V，计算机（我的电脑）-&gt;管理-&gt;设备管理器-&gt;CH340-&gt;波特率选择115200点确定</h4><h4 id="4-下载Putty"><a href="#4-下载Putty" class="headerlink" title="4. 下载Putty"></a>4. 下载Putty</h4><p> <a href="http://down.tvapk.com//data/1606/putty.zip">下载地址</a></p><h4 id="5-打开putty"><a href="#5-打开putty" class="headerlink" title="5.打开putty"></a>5.打开putty</h4><p>设置com口与波特率，然后点击打开，接下来打开盒子的电源，putty就开始接收到数据了</p><h4 id="6-输入"><a href="#6-输入" class="headerlink" title="6.输入"></a>6.输入</h4><pre class="line-numbers language-none"><code class="language-none">dfcd /mnt/usb/sda1lspm install 软件包名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Success （提示这个说明安装成功）</p><p>最后</p><pre class="line-numbers language-apacheconf" data-language="apacheconf"><code class="language-apacheconf">am start com.dangbei.tvlauncher<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就进去当贝桌面了</p><p>接下来说一下问题<br>1，网上有的视频说在机顶盒开机的时候需要按回车！但是我实际操作下来时不需要的，按回车反而会报错！<br>2，不用去管他自己跑的那些代码，等代码跑的慢一点或者机器已经开机后，敲一下回车，只要出现****@****：#这个样子的时候就可以属于上面的代码就行了</p><p>有朋友遇到问题的可以留言哈！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare支持的端口</title>
      <link href="/2022/04/15/cloudflare-zhi-chi-de-duan-kou-cloudflare-zhi-chi-de-duan-kou/"/>
      <url>/2022/04/15/cloudflare-zhi-chi-de-duan-kou-cloudflare-zhi-chi-de-duan-kou/</url>
      
        <content type="html"><![CDATA[<p>Cloudflare HTTP流量可以使用的回源端口如下：</p><p>80</p><p>8080</p><p>8880</p><p>2052</p><p>2082</p><p>2086</p><p>2095</p><p>Cloudflare HTTPS流量可以使用的回源端口如下：</p><p>443</p><p>2053</p><p>2083</p><p>2087</p><p>2096</p><p>8443</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>EXCEL常用公式</title>
      <link href="/2022/04/15/excel-chang-yong-gong-shi-excel-chang-yong-gong-shi/"/>
      <url>/2022/04/15/excel-chang-yong-gong-shi-excel-chang-yong-gong-shi/</url>
      
        <content type="html"><![CDATA[<h4 id="1-自动算生日"><a href="#1-自动算生日" class="headerlink" title="1. 自动算生日"></a>1. 自动算生日</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=TEXT(MID(身份证号码所在单元格,7,8),"0000-00-00")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>END</p><h4 id="2-自动算年龄"><a href="#2-自动算年龄" class="headerlink" title="2.自动算年龄"></a>2.自动算年龄</h4><p>在目标单元格输入公式 </p><pre class="line-numbers language-none"><code class="language-none">=2020-MID(E2,7,4)。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>E2是目标单元格；<br>7是身份证号码从左数起第7位；<br>4是身份证号码第7位数起右边4个数字。<br>如果需要精确到当日，计算到足龄周岁，则在目标单元格输入 </p><pre class="line-numbers language-none"><code class="language-none">=DATEDIF(TEXT(MID(E2,7,8),"00-00-00"),TODAY(),"Y")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>精确到某个日期计算周岁</p><pre class="line-numbers language-none"><code class="language-none">=DATEDIF(TEXT(MID(E2,7,LEN(E2)/2-1),"0-00-00"),"2017-12-31","Y")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>E2是目标单元格</p><h4 id="3-自动算性别"><a href="#3-自动算性别" class="headerlink" title="3.自动算性别"></a>3.自动算性别</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=IF(MOD(MID(身份证号码所在单元格,15,3),2),"男","女")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>END</p><h4 id="4-自动算星座"><a href="#4-自动算星座" class="headerlink" title="4.自动算星座"></a>4.自动算星座</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=CHOOSE(MATCH(TRUE,MID(身份证号码所在单元格,11,2)&amp;"月"&amp;MID(身份证号码所在单元格,13,2)&amp;"日"&gt;={"12月22日","11月22日","10月23日","09月23日","08月23日","07月23日","06月22日","05月21日","04月21日","03月21日","02月19日","01月20日","01月01日"},),"摩羯座","射手座","天蝎座","天秤座","处女座","狮子座","巨蟹座","双子座","金牛座","白羊座","双鱼座","水瓶座","摩羯座")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-自动算出生地（籍贯）"><a href="#5-自动算出生地（籍贯）" class="headerlink" title="5.自动算出生地（籍贯）"></a>5.自动算出生地（籍贯）</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=VLOOKUP(VALUE(LEFT(身份证号码所在单元格,6)),出生地查询表!B:C,2,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6-导入数据"><a href="#6-导入数据" class="headerlink" title="6.导入数据"></a>6.导入数据</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=VLOOKUP(查找值,查找表格左上角，右下角,第几项,FALSE)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="7-不显示错误"><a href="#7-不显示错误" class="headerlink" title="7.不显示错误"></a>7.不显示错误</h4><p>公式：</p><pre class="line-numbers language-none"><code class="language-none">=if(iserror(原公式),"",原公式)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>纯IPV6    VPS常用命令</title>
      <link href="/2022/04/15/chun-ipv6-vps-chang-yong-ming-ling-de-ji-euserv/"/>
      <url>/2022/04/15/chun-ipv6-vps-chang-yong-ming-ling-de-ji-euserv/</url>
      
        <content type="html"><![CDATA[<h4 id="安装WARP"><a href="#安装WARP" class="headerlink" title="安装WARP"></a>安装WARP</h4><pre class="line-numbers language-none"><code class="language-none">wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h4><h5 id="Centos安装命令："><a href="#Centos安装命令：" class="headerlink" title="Centos安装命令："></a>Centos安装命令：</h5><pre class="line-numbers language-none"><code class="language-none">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 12f2c1d72<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="Ubuntu-x2F-Deepin安装命令："><a href="#Ubuntu-x2F-Deepin安装命令：" class="headerlink" title="Ubuntu/Deepin安装命令："></a>Ubuntu/Deepin安装命令：</h5><pre class="line-numbers language-none"><code class="language-none">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh 12f2c1d72<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="Debian安装命令："><a href="#Debian安装命令：" class="headerlink" title="Debian安装命令："></a>Debian安装命令：</h5><pre class="line-numbers language-none"><code class="language-none">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh 12f2c1d72<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：如果套了cloudflare后访问还是提示错误521的话，那么就输入如下命令：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">echo '::' &gt; /www/server/panel/data/ipv6.pl &amp;&amp; /etc/init.d/bt restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果访问还是520错误之类的，有可能没有开启防火墙端口，输入如下命令分别回车：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">firewall-cmd --permanent --zone=public --add-port=8080/tcpfirewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CF workers反代Heroku</title>
      <link href="/2022/04/15/cf-workers-fan-dai-heroku-cfworkers-fan-dai-heroku/"/>
      <url>/2022/04/15/cf-workers-fan-dai-heroku-cfworkers-fan-dai-heroku/</url>
      
        <content type="html"><![CDATA[<p>CF workers反代Heroku代码</p><pre class="line-numbers language-abap" data-language="abap"><code class="language-abap">// 单日const SingleDay <span class="token operator">=</span> <span class="token string">'111.herokuapp.com'</span>// 双日const DoubleDay <span class="token operator">=</span> <span class="token string">'222.herokuapp.com'</span>// 一切给CF代理，true/falseconst CFproxy <span class="token operator">=</span> true// 由于heroku不绑卡不能自定义域名，就算绑卡后https也不方便// 另外免费套餐每月<span class="token number">550</span>小时，有些人不够用// 于是在CF Workers使用此代码，分单双日拉取不同heroku帐号下的相同网页// 只改上面，下面不用动addEventListener<span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token keyword">event</span> =&gt; <span class="token token-operator punctuation">{</span>    <span class="token keyword">let</span> nd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>;    <span class="token keyword">if</span> <span class="token punctuation">(</span>nd<span class="token punctuation">.</span>getDate<span class="token punctuation">(</span><span class="token punctuation">)</span>%<span class="token number">2</span><span class="token punctuation">)</span> <span class="token token-operator punctuation">{</span>        host <span class="token operator">=</span> SingleDay    <span class="token token-operator punctuation">}</span><span class="token string-template string"> else </span><span class="token token-operator punctuation">{</span>        host <span class="token operator">=</span> DoubleDay    <span class="token token-operator punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>!CFproxy<span class="token punctuation">)</span> <span class="token token-operator punctuation">{</span>        <span class="token keyword">let</span> url=new URL<span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token keyword">request</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>;        <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span>protocol == <span class="token string">'http:'</span><span class="token punctuation">)</span> <span class="token token-operator punctuation">{</span>            url<span class="token punctuation">.</span>protocol <span class="token operator">=</span> <span class="token string">'https:'</span>            response <span class="token operator">=</span> Response<span class="token punctuation">.</span>redirect<span class="token punctuation">(</span>url<span class="token punctuation">.</span>href<span class="token punctuation">)</span>;            <span class="token keyword">event</span><span class="token punctuation">.</span>respondWith<span class="token punctuation">(</span> response <span class="token punctuation">)</span>;        <span class="token token-operator punctuation">}</span><span class="token string-template string"> else </span><span class="token token-operator punctuation">{</span>            url<span class="token punctuation">.</span>hostname=host;            <span class="token keyword">let</span> <span class="token keyword">request</span>=new <span class="token keyword">Request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token keyword">request</span><span class="token punctuation">)</span>;            <span class="token keyword">event</span><span class="token punctuation">.</span>respondWith<span class="token punctuation">(</span> <span class="token keyword">fetch</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token token-operator punctuation">}</span>    <span class="token token-operator punctuation">}</span><span class="token string-template string"> else </span><span class="token token-operator punctuation">{</span>        <span class="token keyword">event</span><span class="token punctuation">.</span>respondWith<span class="token punctuation">(</span> fetchAndApply<span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token keyword">request</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>;    <span class="token token-operator punctuation">}</span><span class="token token-operator punctuation">}</span><span class="token punctuation">)</span>async <span class="token keyword">function</span> fetchAndApply<span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token token-operator punctuation">{</span>    <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">null</span>;    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> URL<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>;    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span>protocol == <span class="token string">'http:'</span><span class="token punctuation">)</span> <span class="token token-operator punctuation">{</span>        url<span class="token punctuation">.</span>protocol <span class="token operator">=</span> <span class="token string">'https:'</span>        response <span class="token operator">=</span> Response<span class="token punctuation">.</span>redirect<span class="token punctuation">(</span>url<span class="token punctuation">.</span>href<span class="token punctuation">)</span>;        <span class="token keyword">return</span> response;    <span class="token token-operator punctuation">}</span>    url<span class="token punctuation">.</span>host <span class="token operator">=</span> host;    <span class="token keyword">let</span> <span class="token keyword">method</span> <span class="token operator">=</span> <span class="token keyword">request</span><span class="token punctuation">.</span><span class="token keyword">method</span>;    <span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token keyword">request</span><span class="token punctuation">.</span>body;    <span class="token keyword">let</span> request_headers <span class="token operator">=</span> <span class="token keyword">request</span><span class="token punctuation">.</span><span class="token keyword">headers</span>;    <span class="token keyword">let</span> new_request_headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">Headers</span><span class="token punctuation">(</span>request_headers<span class="token punctuation">)</span>;    new_request_headers<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'Host'</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span>host<span class="token punctuation">)</span>;    new_request_headers<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'Referer'</span><span class="token punctuation">,</span> <span class="token keyword">request</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>;    <span class="token keyword">let</span> original_response <span class="token operator">=</span> await <span class="token keyword">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token token-operator punctuation">{</span>        <span class="token keyword">method</span><span class="token punctuation">:</span> <span class="token keyword">method</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> body<span class="token punctuation">,</span>        <span class="token keyword">headers</span><span class="token punctuation">:</span> new_request_headers    <span class="token token-operator punctuation">}</span><span class="token punctuation">)</span>;    response <span class="token operator">=</span> <span class="token keyword">new</span> Response<span class="token punctuation">(</span>original_response<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token token-operator punctuation">{</span>        status<span class="token punctuation">:</span> original_response<span class="token punctuation">.</span>status<span class="token punctuation">,</span>        <span class="token keyword">headers</span><span class="token punctuation">:</span> original_response<span class="token punctuation">.</span><span class="token keyword">headers</span>    <span class="token token-operator punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> response;<span class="token token-operator punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Uptime Kuma网站监控搭建教程</title>
      <link href="/2022/04/15/uptime-kuma-wang-zhan-jian-kong-da-jian-jiao-cheng-uptimekuma-wang-zhan-jian-kong-da-jian-jiao-cheng/"/>
      <url>/2022/04/15/uptime-kuma-wang-zhan-jian-kong-da-jian-jiao-cheng-uptimekuma-wang-zhan-jian-kong-da-jian-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>这里介绍非docker搭建方法</p><ol><li>安装好Node.js &gt;= 14, git</li><li>安装pm2</li></ol><pre class="line-numbers language-none"><code class="language-none">npm install pm2 -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.按照官网提示操作</p><pre class="line-numbers language-none"><code class="language-none">npm install npm -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/louislam/uptime-kuma.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">cd uptime-kuma<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">npm run setup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">node server/server.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">pm2 start server/server.js --name uptime-kuma<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>宝塔反代<br>编辑反代哪里配置</p><pre class="line-numbers language-none"><code class="language-none">location / {proxy_set_header X-Real-IP $remote_addr;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_pass http://127.0.0.1:3001/;proxy_http_version 1.1;proxy_set_header Upgrade $http_upgrade;proxy_set_header Connection "upgrade";}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>liunx常用命令</title>
      <link href="/2022/04/15/liunx-chang-yong-ming-ling-liunx-chang-yong-ming-ling/"/>
      <url>/2022/04/15/liunx-chang-yong-ming-ling-liunx-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="liunx修改服务器时区"><a href="#liunx修改服务器时区" class="headerlink" title="liunx修改服务器时区"></a>liunx修改服务器时区</h1><p>首先查看服务器时区</p><pre class="line-numbers language-none"><code class="language-none">date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不是中国时区输入命令</p><pre class="line-numbers language-none"><code class="language-none">tzselect<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>选择  4Asia  亚洲  在选择 9China  然后选择北京回车确认<br>复制文件到/etc目录下</p><pre class="line-numbers language-none"><code class="language-none">cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在次查看时间</p><pre class="line-numbers language-none"><code class="language-none">date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h1><pre class="line-numbers language-none"><code class="language-none">passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
